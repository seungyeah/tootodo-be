
services:
  postgres:
    image: postgres:15.6-alpine3.19
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres:/var/lib/postgresql/data
    restart: always
    ports:
      - 6600:5432
    healthcheck:
      test: ["CMD", "pg_isready", "-h", "postgres", "-U", "${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - tootodo_network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_LISTEN_PORT: ${PGADMIN_LISTEN_PORT}
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres
    ports:
      - 5050:80
    networks:
      - tootodo_network
  
  mongo:
    image: mongo:latest
    container_name: mongo
    environment:
        MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
        MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
        MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
        MONGO_TEST_DATABASE: ${MONGO_TEST_DATABASE}
        MONGODB_URL: ${MONGODB_URL}
        MONGODB_TEST_URL: ${MONGODB_TEST_URL}
        MONGODB_CONTAINER_URL: ${MONGODB_CONTAINER_URL}
    volumes:
      - mongo:/var/lib/mongodb/data
    restart: always
    ports:
      - 6100:27017
    networks:
      - tootodo_network

volumes:
  postgres:
  pgadmin-data:
  mongo:

networks:
  tootodo_network: